CMAKE_MINIMUM_REQUIRED(VERSION 2.8.12)
PROJECT(MongoInterface)

set(CMAKE_AUTOMOC ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)

option(USE_SUPERBUILD "Use superbuild to pull in and build dependencies." ON)
set(DOXYGEN_DIR CACHE STRING "${CMAKE_BINARY_DIR}/Doxygen")

# Superbuild rules
if(USE_SUPERBUILD)
    option(GIT_HTTPS "Clone git repositories with HTTPS" ON)
    include(ExternalProject)
    include(Superbuild.cmake)
    return()
endif()

list(APPEND CMAKE_MODULE_PATH 
   ${MongoInterface_SOURCE_DIR} 
   ${MongoInterface_SOURCE_DIR}/cmake
)

add_definitions( -std=c++11 -fPIC)

message("MOD PATH: ${CMAKE_MODULE_PATH}")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall")

#FIND_PACKAGE(Boost 1.54 COMPONENTS system regex thread filesystem program_options REQUIRED )
#INCLUDE_DIRECTORIES( ${Boost_INCLUDE_DIR} )
FIND_PACKAGE(Threads REQUIRED)
FIND_PACKAGE(JsonBox REQUIRED)
FIND_PACKAGE(BSON-1.0 REQUIRED)
FIND_PACKAGE(MongoC REQUIRED)
FIND_PACKAGE(BSONCxx REQUIRED)
FIND_PACKAGE(MongoCxx REQUIRED)
INCLUDE_DIRECTORIES( ${JSONBOX_INCLUDE_DIRS})
INCLUDE_DIRECTORIES( ${BSON_INCLUDE_DIRS})
INCLUDE_DIRECTORIES( ${MONGOC_INCLUDE_DIRS})
INCLUDE_DIRECTORIES( ${BSONCXX_INCLUDE_DIRS})
INCLUDE_DIRECTORIES( ${MONGOCXX_INCLUDE_DIRS})
INCLUDE_DIRECTORIES( ${CMAKE_INSTALL_DIR}/include/mongocxx/v_noabi)
#INCLUDE_DIRECTORIES( ${CMAKE_INSTALL_PREFIX}/include/libmongoc-1.0)
#INCLUDE_DIRECTORIES( ${CMAKE_INSTALL_PREFIX}/include/libbson-1.0)
MESSAGE("LIBRARY STATUS: ${CMAKE_BINARY_DIR}/INSTALL")
#MESSAGE(STATUS "Threads: " ${Threads_INCLUDE_DIR})
MESSAGE("JsonBox: " ${JSONBOX_INCLUDE_DIRS})
MESSAGE("BSON: ${BSON_INCLUDE_DIRS}")
MESSAGE("MongoC: " ${MONGOC_INCLUDE_DIRS})
MESSAGE("MongoCxx: " ${MONGOCXX_INCLUDE_DIRS})
MESSAGE("BSONCxx: " ${BSONCXX_INCLUDE_DIRS})



add_library(MongoInterface STATIC MongoInterface.cpp MongoInterface.h)
TARGET_LINK_LIBRARIES(MongoInterface ${BSON_LIBRARIES} ${JSONBOX_LIBRARY_RELEASE} ${MongoDB_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${MONGOC_LIBRARY} ${BSON_CXX_LIBRARIES} ${MONGO_CXX_LIBRARIES})

install(TARGETS MongoInterface ARCHIVE DESTINATION lib)
install(FILES MongoInterface.h DESTINATION include)

add_executable(MongoInterfaceTest mongotest/MongoInterface_test.cpp MongoInterface.h)
TARGET_LINK_LIBRARIES(MongoInterfaceTest MongoInterface ${BSON_LIBRARIES} ${JSONBOX_LIBRARY_RELEASE} ${MongoDB_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${MONGOC_LIBRARY} ${BSON_CXX_LIBRARIES} ${MONGO_CXX_LIBRARIES})
install(TARGETS MongoInterfaceTest DESTINATION test)

# add a target to generate API documentation with Doxygen
find_package(Doxygen)
if(DOXYGEN_FOUND)
file(MAKE_DIRECTORY ${DOXYGEN_DIR})
configure_file(${CMAKE_SOURCE_DIR}/Doxyfile.in ${DOXYGEN_DIR}/Doxyfile @ONLY)
add_custom_target(doc ALL
${DOXYGEN_EXECUTABLE} ${DOXYGEN_DIR}/Doxyfile
WORKING_DIRECTORY ${DOXYGEN_DIR}
COMMENT "Generating API documentation with Doxygen" VERBATIM
)
endif(DOXYGEN_FOUND)

MESSAGE(STATUS "DOXYGEN_DIR: " ${DOXYGEN_DIR})
